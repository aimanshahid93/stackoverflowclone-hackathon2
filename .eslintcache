[{"C:\\Users\\thame\\Desktop\\abc\\StackOver-Flow-_-React\\src\\index.js":"1","C:\\Users\\thame\\Desktop\\abc\\StackOver-Flow-_-React\\src\\reportWebVitals.js":"2","C:\\Users\\thame\\Desktop\\abc\\StackOver-Flow-_-React\\src\\App.js":"3","C:\\Users\\thame\\Desktop\\abc\\StackOver-Flow-_-React\\src\\app\\store.js":"4","C:\\Users\\thame\\Desktop\\abc\\StackOver-Flow-_-React\\src\\firebase.js":"5","C:\\Users\\thame\\Desktop\\abc\\StackOver-Flow-_-React\\src\\feature\\userSlice.js":"6","C:\\Users\\thame\\Desktop\\abc\\StackOver-Flow-_-React\\src\\components\\Auth\\index.js":"7","C:\\Users\\thame\\Desktop\\abc\\StackOver-Flow-_-React\\src\\components\\ViewQuestion\\index.js":"8","C:\\Users\\thame\\Desktop\\abc\\StackOver-Flow-_-React\\src\\components\\StackOverflow\\index.js":"9","C:\\Users\\thame\\Desktop\\abc\\StackOver-Flow-_-React\\src\\components\\Header\\index.js":"10","C:\\Users\\thame\\Desktop\\abc\\StackOver-Flow-_-React\\src\\components\\AddQuestion\\index.js":"11","C:\\Users\\thame\\Desktop\\abc\\StackOver-Flow-_-React\\src\\components\\StackOverflow\\Main.js":"12","C:\\Users\\thame\\Desktop\\abc\\StackOver-Flow-_-React\\src\\components\\StackOverflow\\Sidebar.js":"13","C:\\Users\\thame\\Desktop\\abc\\StackOver-Flow-_-React\\src\\components\\ViewQuestion\\MainQuestion.js":"14","C:\\Users\\thame\\Desktop\\abc\\StackOver-Flow-_-React\\src\\components\\StackOverflow\\AllQuestions.js":"15","C:\\Users\\thame\\Desktop\\abc\\StackOver-Flow-_-React\\src\\utils\\Avatar.js":"16"},{"size":939,"mtime":1665481610739,"results":"17","hashOfConfig":"18"},{"size":375,"mtime":1665481610739,"results":"19","hashOfConfig":"18"},{"size":1936,"mtime":1665481992174,"results":"20","hashOfConfig":"18"},{"size":281,"mtime":1665481610728,"results":"21","hashOfConfig":"18"},{"size":678,"mtime":1665481610738,"results":"22","hashOfConfig":"18"},{"size":460,"mtime":1665481610738,"results":"23","hashOfConfig":"18"},{"size":6251,"mtime":1665481610731,"results":"24","hashOfConfig":"18"},{"size":365,"mtime":1665481610737,"results":"25","hashOfConfig":"18"},{"size":697,"mtime":1665481610736,"results":"26","hashOfConfig":"18"},{"size":3114,"mtime":1665481610732,"results":"27","hashOfConfig":"18"},{"size":5087,"mtime":1665481610729,"results":"28","hashOfConfig":"18"},{"size":1772,"mtime":1665481610733,"results":"29","hashOfConfig":"18"},{"size":2659,"mtime":1665481610734,"results":"30","hashOfConfig":"18"},{"size":10245,"mtime":1665481610737,"results":"31","hashOfConfig":"18"},{"size":2342,"mtime":1665481610733,"results":"32","hashOfConfig":"18"},{"size":643,"mtime":1665481610740,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"kfh3gs",{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\thame\\Desktop\\abc\\StackOver-Flow-_-React\\src\\index.js",[],"C:\\Users\\thame\\Desktop\\abc\\StackOver-Flow-_-React\\src\\reportWebVitals.js",[],"C:\\Users\\thame\\Desktop\\abc\\StackOver-Flow-_-React\\src\\App.js",[],"C:\\Users\\thame\\Desktop\\abc\\StackOver-Flow-_-React\\src\\app\\store.js",[],"C:\\Users\\thame\\Desktop\\abc\\StackOver-Flow-_-React\\src\\firebase.js",["69"],"import { initializeApp } from \"firebase/app\";\r\nimport { getAuth, GoogleAuthProvider } from \"firebase/auth\";\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAm2j5QCRCCJlRX0r1qBG_be1bXdXSRdyY\",\r\n  authDomain: \"stackoverflow-3f0d8.firebaseapp.com\",\r\n  projectId: \"stackoverflow-3f0d8\",\r\n  storageBucket: \"stackoverflow-3f0d8.appspot.com\",\r\n  messagingSenderId: \"76298589116\",\r\n  appId: \"1:76298589116:web:26ce6feaf0025dbdd511b9\",\r\n  measurementId: \"G-LDJE2JW8YE\",\r\n};\r\n\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\n// const db = firebaseApp.firestore();\r\nconst auth = getAuth();\r\nconst provider = new GoogleAuthProvider();\r\n\r\nexport { auth, provider };\r\n// export default db;\r\n","C:\\Users\\thame\\Desktop\\abc\\StackOver-Flow-_-React\\src\\feature\\userSlice.js",[],"C:\\Users\\thame\\Desktop\\abc\\StackOver-Flow-_-React\\src\\components\\Auth\\index.js",[],"C:\\Users\\thame\\Desktop\\abc\\StackOver-Flow-_-React\\src\\components\\ViewQuestion\\index.js",[],"C:\\Users\\thame\\Desktop\\abc\\StackOver-Flow-_-React\\src\\components\\StackOverflow\\index.js",[],"C:\\Users\\thame\\Desktop\\abc\\StackOver-Flow-_-React\\src\\components\\Header\\index.js",[],"C:\\Users\\thame\\Desktop\\abc\\StackOver-Flow-_-React\\src\\components\\AddQuestion\\index.js",["70"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\"; // ES6\r\nimport \"./index.css\";\r\nimport Editor from \"react-quill/lib/toolbar\";\r\nimport axios from \"axios\";\r\nimport { TagsInput } from \"react-tag-input-component\";\r\nimport { selectUser } from \"../../feature/userSlice\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// import ChipsArray from \"./TagsInput\";\r\n\r\nfunction Index() {\r\n  const user = useSelector(selectUser);\r\n  var toolbarOptions = [\r\n    [\"bold\", \"italic\", \"underline\", \"strike\"], // toggled buttons\r\n    [\"blockquote\", \"code-block\"],\r\n\r\n    [{ header: 1 }, { header: 2 }], // custom button values\r\n    [{ list: \"ordered\" }, { list: \"bullet\" }],\r\n    [{ script: \"sub\" }, { script: \"super\" }], // superscript/subscript\r\n    [{ indent: \"-1\" }, { indent: \"+1\" }], // outdent/indent\r\n    [{ direction: \"rtl\" }], // text direction\r\n\r\n    [{ size: [\"small\", false, \"large\", \"huge\"] }], // custom dropdown\r\n    [{ header: [1, 2, 3, 4, 5, 6, false] }],\r\n\r\n    [{ color: [] }, { background: [] }], // dropdown with defaults from theme\r\n    [{ font: [] }],\r\n    [{ align: [] }],\r\n\r\n    [\"clean\"], // remove formatting button\r\n  ];\r\n  Editor.modules = {\r\n    syntax: false,\r\n    toolbar: toolbarOptions,\r\n    clipboard: {\r\n      // toggle to add extra line breaks when pasting HTML:\r\n      matchVisual: false,\r\n    },\r\n  };\r\n  /*\r\n   * Quill editor formats\r\n   * See https://quilljs.com/docs/formats/\r\n   */\r\n  Editor.formats = [\r\n    \"header\",\r\n    \"font\",\r\n    \"size\",\r\n    \"bold\",\r\n    \"italic\",\r\n    \"underline\",\r\n    \"strike\",\r\n    \"blockquote\",\r\n    \"list\",\r\n    \"bullet\",\r\n    \"indent\",\r\n    \"link\",\r\n    \"image\",\r\n    \"video\",\r\n  ];\r\n\r\n  /*\r\n   * PropType validation\r\n   */\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n  const [body, setBody] = useState(\"\");\r\n  const [tag, setTag] = useState([]);\r\n  const history = useHistory();\r\n\r\n  const handleQuill = (value) => {\r\n    setBody(value);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (title !== \"\" && body !== \"\") {\r\n      const bodyJSON = {\r\n        title: title,\r\n        body: body,\r\n        tag: JSON.stringify(tag),\r\n        user: user,\r\n      };\r\n      await axios\r\n        .post(\"/api/question\", bodyJSON)\r\n        .then((res) => {\r\n          // console.log(res.data);\r\n          alert(\"Question added successfully\");\r\n          history.push(\"/\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"add-question\">\r\n      <div className=\"add-question-container\">\r\n        <div className=\"head-title\">\r\n          <h1>Ask a public question</h1>\r\n        </div>\r\n        <div className=\"question-container\">\r\n          <div className=\"question-options\">\r\n            <div className=\"question-option\">\r\n              <div className=\"title\">\r\n                <h3>Title</h3>\r\n                <small>\r\n                  Be specific and imagine youâ€™re asking a question to another\r\n                  person\r\n                </small>\r\n                <input\r\n                  value={title}\r\n                  onChange={(e) => setTitle(e.target.value)}\r\n                  type=\"text\"\r\n                  placeholder=\"e.g Is there an R function for finding teh index of an element in a vector?\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"question-option\">\r\n              <div className=\"title\">\r\n                <h3>Body</h3>\r\n                <small>\r\n                  Include all the information someone would need to answer your\r\n                  question\r\n                </small>\r\n                <ReactQuill\r\n                  value={body}\r\n                  onChange={handleQuill}\r\n                  modules={Editor.modules}\r\n                  className=\"react-quill\"\r\n                  theme=\"snow\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"question-option\">\r\n              <div className=\"title\">\r\n                <h3>Tags</h3>\r\n                <small>\r\n                  Add up to 5 tags to describe what your question is about\r\n                </small>\r\n                {/* <input\r\n                  value={tag}\r\n                  onChange={(e) => setTag(e.target.value)}\r\n                  data-role=\"tagsinput\"\r\n                  data-tag-trigger=\"Space\"\r\n                  type=\"text\"\r\n                  placeholder=\"e.g. (asp.net-mvc php react json)\"\r\n                /> */}\r\n\r\n                <TagsInput\r\n                  value={tag}\r\n                  onChange={setTag}\r\n                  name=\"fruits\"\r\n                  placeHolder=\"press enter to add new tag\"\r\n                />\r\n\r\n                {/* <ChipsArray /> */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <button onClick={handleSubmit} className=\"button\">\r\n          Add your question\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Index;\r\n","C:\\Users\\thame\\Desktop\\abc\\StackOver-Flow-_-React\\src\\components\\StackOverflow\\Main.js",[],"C:\\Users\\thame\\Desktop\\abc\\StackOver-Flow-_-React\\src\\components\\StackOverflow\\Sidebar.js",[],"C:\\Users\\thame\\Desktop\\abc\\StackOver-Flow-_-React\\src\\components\\ViewQuestion\\MainQuestion.js",[],"C:\\Users\\thame\\Desktop\\abc\\StackOver-Flow-_-React\\src\\components\\StackOverflow\\AllQuestions.js",["71"],"import { Avatar } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport \"./css/AllQuestions.css\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { stringAvatar } from \"../../utils/Avatar\";\r\n\r\nfunction AllQuestions({ data }) {\r\n  function truncate(str, n) {\r\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n  }\r\n\r\n  let tags = JSON.parse(data?.tags[0]);\r\n  // console.log();\r\n  return (\r\n    <div className=\"all-questions\">\r\n      <div className=\"all-questions-container\">\r\n        <div className=\"all-questions-left\">\r\n          <div className=\"all-options\">\r\n            <div className=\"all-option\">\r\n              <p>0</p>\r\n              <span>votes</span>\r\n            </div>\r\n            <div className=\"all-option\">\r\n              <p>{data?.answerDetails?.length}</p>\r\n              <span>answers</span>\r\n            </div>\r\n            <div className=\"all-option\">\r\n              <small>2 views</small>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"question-answer\">\r\n          <Link to={`/question?q=${data?._id}`}>{data.title}</Link>\r\n\r\n          {/* <a href=>{data.title}</a> */}\r\n\r\n          <div\r\n            style={{\r\n              maxWidth: \"90%\",\r\n            }}\r\n          >\r\n            <div>{ReactHtmlParser(truncate(data.body, 200))}</div>\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n            }}\r\n          >\r\n            {tags.map((_tag) => (\r\n              <p\r\n                style={{\r\n                  margin: \"10px 5px\",\r\n                  padding: \"5px 10px\",\r\n                  backgroundColor: \"#007cd446\",\r\n                  borderRadius: \"3px\",\r\n                }}\r\n              >\r\n                {_tag}\r\n              </p>\r\n            ))}\r\n          </div>\r\n          <div className=\"author\">\r\n            <small>{data.create_at}</small>\r\n            <div className=\"auth-details\">\r\n              <Avatar {...stringAvatar(data?.user?.displayName)} />\r\n              <p>\r\n                {data?.user?.displayName\r\n                  ? data?.user?.displayName\r\n                  : \"Natalie lee\"}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AllQuestions;\r\n","C:\\Users\\thame\\Desktop\\abc\\StackOver-Flow-_-React\\src\\utils\\Avatar.js",[],{"ruleId":"72","severity":1,"message":"73","line":13,"column":7,"nodeType":"74","messageId":"75","endLine":13,"endColumn":18},{"ruleId":"72","severity":1,"message":"76","line":1,"column":17,"nodeType":"74","messageId":"75","endLine":1,"endColumn":26},{"ruleId":"72","severity":1,"message":"77","line":2,"column":17,"nodeType":"74","messageId":"75","endLine":2,"endColumn":25},"no-unused-vars","'firebaseApp' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used."]